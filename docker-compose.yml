version: "3.9"

services:
  web:
    container_name: "web"
    build: .
    ports:
      - "8081:8081"
    depends_on:
      - db

  db:
    container_name: postgres_db
    image: postgres:14
    restart: unless-stopped
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d/:ro
    env_file:
      - environment/database.postgres.env
    ports:
      - "5432:5432"
    networks:
      - backend

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:5
    restart: unless-stopped
    env_file:
      - ./environment/database.postgres.env
    ports:
      - "5050:80"
    networks:
      - backend

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:16.0.0
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - ./environment/keycloak.postgres.env
    ports:
      - "8180:8080"
      - "8787:8787"
    networks:
      - backend

  balance:
    container_name: "balance"
    image: abrasha94/my-repository:balance_image
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - mongoDb

  mongoDb:
    container_name: "mongoDb"
    image: mongo:4.2.23-rc1
    ports:
      - "27017:27017"
    restart: always

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  backend:
    name: backend
    driver: bridge